doctype html
html(manifest=dev?null:'troxel.appcache')
  head
    title Troxel
    link(rel='stylesheet', href='static/bootstrap.min.css')
    link(rel='stylesheet', href='static/bootstrap-theme.min.css')
    style.
      #dropZone {
        border: 2px dashed #bbbbbb;
        border-radius: 5px;
        color: #737373;
        padding: 25px;
        text-align: center;
      }

      .twitter-typeahead{
        width: 100%;
      }
      .tt-dropdown-menu {
        width: 100%;
        margin-top: 2px;
        padding: 8px 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0, 0, 0, 0.2);
        max-height: 400px;
        overflow-y: auto;
        -webkit-border-radius: 8px;
           -moz-border-radius: 8px;
                border-radius: 8px;
        -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
           -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
                box-shadow: 0 5px 10px rgba(0,0,0,.2);
      }
      .tt-suggestion {
        padding: 3px 20px;
        font-size: 18px;
        line-height: 24px;
      }
      .tt-suggestion.tt-cursor {
        color: #fff;
        background-color: #0097cf;
      }
      .tt-suggestion p {
        margin: 0;
      }
  body(style='background-color: #888888;')
    .navbar.navbar-inverse.navbar-fixed-top(role='navigation', style='margin-bottom: 0px;')
      .container-fluid
        .navbar-header
          a.navbar-brand(href=dev?'/':'/Troxel/') Troxel
        .collapse.navbar-collapse
          ul.nav.navbar-nav
            li.dropdown
              a.dropdown-toggle(data-toggle='dropdown', data-tag='#ulSavedModels') My models (save / open)
                span.caret
              ul#ulSavedModels.dropdown-menu(role='menu')
                li.dropdown-header Current Model:
                li.disabled: a untitled/unsaved
                li(style='display: none;'): a Save
                li: a(data-toggle='modal', data-target='#saveModal') Save as ...
                li(style='display: none;'): a Remove
                li.divider
                li.dropdown-header Saved Models:
                li.disabled: a No saved models
          button.btn.btn-primary.navbar-btn(style='margin-left: 50px;', data-toggle='modal', data-target='#openModal') Open model from file ...
          button#btnExport.btn.btn-default.navbar-btn(style='margin-left: 5px; display: none;', data-toggle='modal', data-target='#exportModal') Export model as ...
          a#btnExportPng.btn.btn-default.navbar-btn(style='margin-left: 5px; display: none;', download='Model.png') Open current view as png
          ul.nav.navbar-nav.navbar-right
            li: p.navbar-text Mode:
            li.active: a#modeView View
            li: a#modeEdit Edit

    #openModal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            button.close(data-dismiss='modal'): span &times;
            h4.modal-title Open model from file ...
          .modal-body
            ul#filetabs.nav.nav-tabs(role='tablist', style='margin-bottom: 15px;')
              li.active: a(href='#tabqb', data-toggle='tab') Qubicle (.qb)
              li: a(href='#tabzox', data-toggle='tab') Zoxel (.zox)
              li: a(href='#tabvox', data-toggle='tab') Magica (.vox)
              li: a(href='#tabjson', data-toggle='tab') JSON
              li: a#dragTab(href='#tabdrag', data-toggle='tab') Drag & Drop
              li: a#openTroveTab(href='#tabtrove', data-toggle='tab') Trove-Model-List
              li: a(href='#tabnew', data-toggle='tab') empty Model (new)
            .tab-content
              #tabqb.tab-pane.fade.in.active
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='fqb') Main mesh (*.qb):
                    .col-sm-9: input#fqb(type='file', multiple)
                  .form-group
                    label.col-sm-3.control-label(for='fqba') Alpha map (*_a.qb):
                    .col-sm-9: input#fqba(type='file', multiple)
                  .form-group
                    label.col-sm-3.control-label(for='fqbt') Type map (*_t.qb):
                    .col-sm-9: input#fqbt(type='file', multiple)
                  .form-group
                    label.col-sm-3.control-label(for='fqbs') Specular map (*_s.qb):
                    .col-sm-9: input#fqbs(type='file', multiple)
                  span.help-block Alpha, Type and Specular map are optional (only the main mesh is required)
              #tabzox.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='fzox') Zoxel file (*.zox):
                    .col-sm-9: input#fzox(type='file', multiple)
              #tabvox.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='fvox') Magica Voxel file (*.vox):
                    .col-sm-9: input#fvox(type='file', multiple)
              #tabjson.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-1.control-label(for='sjson') JSON:
                    .col-sm-11: textarea#sjson.form-control(rows=7, style='resize: vertical; min-height: 100px;')
              #tabdrag.tab-pane.fade
                #dropZone Drag files anywhere to this modal to select them
                h4 Selected files:
                ul.list-unstyled
                  li: span.help-block No files selected
              #tabtrove.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-2.control-label(for='sbtrove') Blueprint id:
                    .col-sm-10: input#sbtrove.form-control(type='text')
                  span.help-block
                    | Hint: Check out
                    a(href='http://www.etaew.net/trove/database.php')  Trove DB
                    |  for a categorized list of Trove items with metatdata.
              #tabnew.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-2.control-label(for='cbnewTP') Trove presets:
                    .col-sm-10: select#cbnewTP.form-control
                      option custom - choose your options below
                  .form-group
                    label.col-sm-2.control-label Dimensions:
                    .col-sm-10: .input-group
                      span.input-group-addon x:
                      input#snewX.form-control(type='number', value='20')
                      span.input-group-addon y:
                      input#snewY.form-control(type='number', value='20')
                      span.input-group-addon z:
                      input#snewZ.form-control(type='number', value='20')
                  .form-group
                    label.col-sm-2.control-label(for='cbnewAp') attachment Point:
                    .col-sm-10: .input-group
                      span.input-group-addon
                        input#cbnewAp(type='checkbox', style='margin-right: 3px;')
                        |  add at position:
                      span.input-group-addon x:
                      input#snewApX.snewApPos.form-control(type='number', value='10', disabled)
                      span.input-group-addon y:
                      input#snewApY.snewApPos.form-control(type='number', value='10', disabled)
                      span.input-group-addon z:
                      input#snewApZ.snewApPos.form-control(type='number', value='10', disabled)
          .modal-footer
            button.btn.btn-default(data-dismiss='modal') Close
            button#open.btn.btn-primary Open model

    #exportModal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(data-dismiss='modal'): span &times;
            h4.modal-title Export model as ...
          .modal-body
            ul.nav.nav-tabs(role='tablist', style='margin-bottom: 15px;')
              li.active: a(href='#tabexqb', data-toggle='tab') Qubicle maps (.qb)
              li: a(href='#tabexzox', data-toggle='tab') Zoxel (.zox)
              li: a(href='#tabexvox', data-toggle='tab') Magica (.vox)
              li: a(href='#tabexbase64', data-toggle='tab') Link (share)
              li: a(href='#tabexjson', data-toggle='tab') JSON
            .tab-content
              #tabexqb.tab-pane.fade.in.active
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='exportFilenameQb') File name:
                    .col-sm-9: .input-group
                      input#exportFilenameQb.form-control(type='text', value='Model')
                      span.input-group-addon .qb
                  .form-group
                    label.col-sm-3.control-label(for='exportQbComp') Options:
                    .col-sm-9: .checkbox
                      label
                        input#exportQbComp(type='checkbox')
                        | compressed (incompatible with 3rdparty apps like Zoxel)
                a#exportQb.btn.btn-primary.btn-lg.btn-block(download='Model.qb') Export as Qubicle (.qb) ...
                a#exportQba.btn.btn-default.btn-block(download='Model_a.qb', style='display: none;') Download alpha map (*_a.qb)
                a#exportQbt.btn.btn-default.btn-block(download='Model_t.qb', style='display: none;') Download type map (*_t.qb)
                a#exportQbs.btn.btn-default.btn-block(download='Model_s.qb', style='display: none;') Download specular map (*_s.qb)
              #tabexzox.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='exportFilenameZox') File name:
                    .col-sm-9: .input-group
                      input#exportFilenameZox.form-control(type='text', value='Model')
                      span.input-group-addon .zox
                a#exportZox.btn.btn-primary.btn-lg.btn-block(download='Model.zox') Export as Zoxel (.zox) ...
              #tabexvox.tab-pane.fade
                .form-horizontal
                  .form-group
                    label.col-sm-3.control-label(for='exportFilenameVox') File name:
                    .col-sm-9: .input-group
                      input#exportFilenameVox.form-control(type='text', value='Model')
                      span.input-group-addon .vox
                a#exportVox.btn.btn-primary.btn-lg.btn-block(download='Model.vox') Export as Magica Voxel (.vox) ...
              #tabexbase64.tab-pane.fade
                .checkbox
                  label
                    input#exportBase64Ro(type='checkbox')
                    | readonly
                button#exportBase64.btn.btn-primary.btn-lg.btn-block Export as Troxel Link
                textarea#exportBase64Ta.form-control(rows=7, style='resize: vertical; min-height: 100px; display: none; margin-top: 5px;')
              #tabexjson.tab-pane.fade
                .checkbox
                  label
                    input#exportJsonPret(type='checkbox', checked)
                    | pretty
                button#exportJson.btn.btn-primary.btn-lg.btn-block Export as Troxel (json)
                textarea#exportJsonTa.form-control(rows=7, style='resize: vertical; min-height: 100px; display: none; margin-top: 5px;')
          .modal-footer
            button.btn.btn-default(data-dismiss='modal') Close

    #saveModal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(data-dismiss='modal'): span &times;
            h4.modal-title Save model locally as ...
          .modal-body
            .form-horizontal
              .form-group
                label.col-sm-2.control-label(for='saveModelName') Name:
                .col-sm-10: input#saveModelName.form-control(type='text')
          .modal-footer
            button.btn.btn-default(data-dismiss='modal') Close
            button#saveModelAs.btn.btn-primary Save model locally

    #resizeModal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog
        .modal-content
          .modal-header
            button.close(data-dismiss='modal'): span &times;
            h4.modal-title Resize voxel model ...
          .modal-body
            .input-group
              span.input-group-addon x:
              input#resizeX.form-control(type='number')
              span.input-group-addon y:
              input#resizeY.form-control(type='number')
              span.input-group-addon z:
              input#resizeZ.form-control(type='number')
          .modal-footer
            button.btn.btn-default(data-dismiss='modal') Close
            button#resizeBtn.btn.btn-primary Resize voxel model

    div(style="position: absolute; top: 50px; bottom: 0px; width: 100%;")
      #WebGlContainer(style='position: absolute; right: 220px; left: 0px; height: 100%;')
      div(style='position: absolute; right: 0px; width: 220px; height: 100%; overflow: auto;')
        #addPanel.panel.panel-default(style='display: none;')
          .panel-heading
            h3.panel-title Editing options
          .panel-body
            .form-horizontal
              .form-group(style='margin-bottom: 5px;')
                label.col-sm-3.control-label(for='editTool', style='padding-top: 0px;') Tool:
                .col-sm-9: .btn-group.btn-group-xs(data-toggle='buttons', style='margin-bottom: 5px;')
                  label.btn.btn-info.active
                    input.editTool(type='radio', name='editTool', data-edittool=0, checked)
                    | add/remove
                  label.btn.btn-info
                    input.editTool(type='radio', name='editTool', data-edittool=1)
                    | fill mode
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-4.control-label(for='addVoxColor') Color:
                .col-sm-8: .input-group.input-group-sm
                  input#addVoxColor.form-control.input-sm(type='color', value='#ffb248')
                  span.input-group-btn: button#addVoxAP.btn.btn-default AP
              .form-group(style='margin-bottom: 5px;')
                label.col-sm-3.control-label(for='editNoise', style='padding-top: 0px;') Noise:
                .col-sm-9: .btn-group.btn-group-xs(data-toggle='buttons', style='margin-bottom: 5px;')
                  label.btn.btn-info.active
                    input.editNoise(type='radio', name='editNoise', data-editnoise=0, checked)
                    | none
                  label.btn.btn-info
                    input.editNoise(type='radio', name='editNoise', data-editnoise=1)
                    | bright.
                  label.btn.btn-info
                    input.editNoise(type='radio', name='editNoise', data-editnoise=2)
                    | full rgb
              .form-group#editVoxNoiseGroup(style='margin-bottom: 0px; display: none;')
                label.col-sm-4.control-label(for='addVoxAlpha', style='padding-top: 0px;') Intensity:
                .col-sm-8
                  input#editVoxNoise(type='range', min=0, max=0.5, step=0.01, value=0.2)
              .form-group(style='margin-bottom: 0px;')
                label.col-sm-4.control-label(for='addVoxAlpha') Alpha:
                .col-sm-8
                  input#addVoxAlpha(type='range', min=16, max=240, step=32, value=112, disabled)
                span.help-block transparent => solid
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-4.control-label(for='addVoxType') Type:
                .col-sm-8
                  select#addVoxType.form-control.input-sm
                    option(value=0) solid
                    option(value=1) glass
                    option(value=2) tiled glass
                    option(value=3) glowing solid
                    option(value=4) glowing glass
              .form-group(style='margin-bottom: 0px;')
                label.col-sm-4.control-label(for='addVoxSpecular') Specular:
                .col-sm-8
                  select#addVoxSpecular.form-control.input-sm
                    option(value=0) rough
                    option(value=1) metal
                    option(value=2) water
                    option(value=3) iridescent
            button#openResizeModal.btn.btn-default.btn-sm.btn-block(style='margin: 10px 0px -13px;', data-toggle='modal', data-target='#resizeModal') resize voxel model
        .panel.panel-default
          .panel-heading
            h3.panel-title Light options
          .panel-body(style='padding: 5px 15px 0px;')
            .form-horizontal
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-8.control-label(for='ambLightColor') Ambient light:
                .col-sm-4
                  input#ambLightColor.form-control.input-sm(type='color', value='#606060', style='padding: 5px;')
            .h5: b: u Directional light:
            .form-horizontal
              .form-group(style='margin-bottom: 0px;')
                label.col-sm-4.control-label(for='dirLightColor') Color:
                .col-sm-8
                  input#dirLightColor.form-control.input-sm(type='color', value='#ffffff', style='padding: 5px;')
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-4.control-label(for='dirLightIntensity') Intensity:
                .col-sm-8
                  input#dirLightIntensity(type='range', min=0, max=5, step=0.1, value=1, style='margin-top: 5px;')
            .input-group.input-group-sm(style='margin: 0px -8px 5px;')
              span.input-group-addon(style='padding: 5px;') x:
              input#dirLightX.form-control(type='text', value='1', style='padding: 5px;')
              span.input-group-addon(style='padding: 5px;') y:
              input#dirLightY.form-control(type='text', value='0.75', style='padding: 5px;')
              span.input-group-addon(style='padding: 5px;') z:
              input#dirLightZ.form-control(type='text', value='0.5', style='padding: 5px;')
              span.input-group-btn
                button#dirLightVector.btn.btn-default(style='padding: 5px;') go
        .panel.panel-default
          .panel-heading
            h3.panel-title Rotate model
          .panel-body
            .form-horizontal
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-5.control-label x-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.rotateBtn.btn.btn-default(data-rotate='x') up
                    button.rotateBtn.btn.btn-default(data-rotate='-x') down
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-5.control-label y-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.rotateBtn.btn.btn-default(data-rotate='y') left
                    button.rotateBtn.btn.btn-default(data-rotate='-y') right
              .form-group(style='margin-bottom: 0px;')
                label.col-sm-5.control-label z-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.rotateBtn.btn.btn-default(data-rotate='z') cw
                    button.rotateBtn.btn.btn-default(data-rotate='-z') acw
        .panel.panel-default
          .panel-heading
            h3.panel-title Move model
          .panel-body
            .form-horizontal
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-5.control-label x-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.moveBtn.btn.btn-default(data-move='x') left
                    button.moveBtn.btn.btn-default(data-move='-x') right
              .form-group(style='margin-bottom: 10px;')
                label.col-sm-5.control-label y-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.moveBtn.btn.btn-default(data-move='-y') up
                    button.moveBtn.btn.btn-default(data-move='y') down
              .form-group(style='margin-bottom: 0px;')
                label.col-sm-5.control-label z-axis:
                .col-sm-7
                  .btn-group.btn-group-sm
                    button.moveBtn.btn.btn-default(data-move='z') fw
                    button.moveBtn.btn.btn-default(data-move='-z') back
        .panel.panel-default
          .panel-heading
            h3.panel-title Mirror model
          .btn-group-vertical.btn-group-sm(style='width: 100%;')
            button.mirrorBtn.btn.btn-default(data-mirror='x') Mirror x-axis
            button.mirrorBtn.btn.btn-default(data-mirror='y') Mirror y-axis
            button.mirrorBtn.btn.btn-default(data-mirror='z') Mirror z-axis

    script(src='static/jquery-2.1.1.min.js', type='text/javascript')
    script(src='static/bootstrap.min.js', type='text/javascript')
    script(src='static/three.min.js', type='text/javascript')
    script(src='static/OrbitControls.min.js', type='text/javascript')
    script(src='static/stats.min.js', type='text/javascript')
    script(src='static/typeahead.min.js', type='text/javascript')
    script(src='static/Trove.json' type='application/json', async)
    if dev
      != js('IO', {'type': 'text/javascript'})
      != js('Qubicle.io', {'type': 'text/javascript'})
      != js('Zoxel.io', {'type': 'text/javascript'})
      != js('Magica.io', {'type': 'text/javascript'})
      != js('Troxel.io', {'type': 'text/javascript'})
      != js('Trove.io', {'type': 'text/javascript'})
      != js('Renderer', {'type': 'text/javascript'})
      != js('Main', {'type': 'text/javascript'})
    else
      script(src='static/troxel.min.js', type='text/javascript')
      script.
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'UA-54717865-1', 'auto'); ga('send', 'pageview');
